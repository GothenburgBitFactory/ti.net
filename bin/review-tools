#!/usr/bin/env bash

function review_blacklist()
{
  for url in "${!TOOLS_BLACKLIST[@]}" ; do
    open -g -u "${url}"
    echo "${url} was blacklisted because it '${TOOLS_BLACKLIST["${url}"]}'"
    read -r -p "Keep ${url} in blacklist? (Y/n): " confirm

    if [[ "${confirm:-"y"}" =~ [yY] ]] ; then
      continue
    fi

    unset TOOLS_BLACKLIST["${url}"]
  done
}

function review_added_urls()
{
  for url in "${URLS[@]}" ; do
    open -g "${url}"

    read -r -p "Blacklist ${url}? (y/N): " confirm

    if [[ "${confirm:-"n"}" =~ [nN] ]] ; then
      continue
    fi

    read -r -p "Specify reason: because it ... " reason

    TOOLS_BLACKLIST+=( ["${url}"]="${reason}" )
  done
}

function update_blacklist()
{
  echo "Writing ${#TOOLS_BLACKLIST[@]} entries to '${TOOLS_BLACKLIST_FILE}'..."
  (
    local first_line
    echo "{"
    for key in "${!TOOLS_BLACKLIST[@]}" ; do
      echo "${first_line+","}\"${key}\": \"${TOOLS_BLACKLIST[${key}]}\""
      first_line="no"
    done
    echo "}"
  ) | jq --sort-keys --indent 4  > "${TOOLS_BLACKLIST_FILE}"
}

function get_added_urls()
{
  git log -p \
      ${LAST_REVIEW_TIMESTAMP+"--since=${LAST_REVIEW_TIMESTAMP}"} \
      --full-diff \
      "**/tools-data.json" \
       | grep -E "^\+\s+\"url\"" \
       | sed -e "s|.*\"url\": \"\(.*\)\"|\1|" \
       | sort -u
}

function load_review_timestamp()
{
  [[ -e "${REPO_ROOT}/.review-timestamp" ]] && source "${REPO_ROOT}/.review-timestamp"
}

function update_review_timestamp()
{
  echo "LAST_REVIEW_TIMESTAMP=$( git log -1 --format=%cd --date=short )" > "${REPO_ROOT}/.review-timestamp"
}

function require_tool()
{
  if ! command -v "${1}" >/dev/null 2>&1 ; then
    echo "Tool '${1}' is either inaccessible or not installed!"
    exit
  fi
}

require_tool "jq"

TOOLS_BLACKLIST_FILE="${1?"Path to blacklist is missing!"}"

REPO_ROOT="$( git rev-parse --show-toplevel )"

load_review_timestamp

declare -A TOOLS_BLACKLIST
while read -r key value ; do
  TOOLS_BLACKLIST["${key}"]="${value}"
done < <( jq -r 'to_entries[] | .key+" "+.value' "${TOOLS_BLACKLIST_FILE}" )

if [[ "${#TOOLS_BLACKLIST[@]}" -eq 0 ]] ; then
  echo "Current blacklist is emtpy!"
else
  read -r -p "Review current blacklist (${#TOOLS_BLACKLIST[@]} items)? (y/N): " confirm

  if [[ "${confirm:-"n"}" =~ [yY] ]] ; then
    echo "Reviewing ${#TOOLS_BLACKLIST[@]} entries..."
    review_blacklist
  fi
fi

declare -a URLS
readarray -t URLS < <( get_added_urls )

if [[ "${#URLS[@]}" -eq 0 ]] ; then
  echo "No new URLs found to review!"
else
  echo "Reviewing ${#URLS[@]} URLs${LAST_REVIEW_TIMESTAMP+", added since ${LAST_REVIEW_TIMESTAMP}"}..."
  review_added_urls
fi

update_blacklist
update_review_timestamp
